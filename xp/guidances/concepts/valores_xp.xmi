<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-pA6XLJKgRiwDTEp_qMlQ9g" name="xp_values,1.076140803519123E-306" guid="-pA6XLJKgRiwDTEp_qMlQ9g" changeDate="2005-12-06T07:48:47.737-0300" version="7.2.0">
  <mainDescription>&lt;a id=&quot;XE_xp__core_values&quot; name=&quot;XE_xp__core_values&quot;>&lt;/a> &#xD;
&lt;h2>&#xD;
    &lt;a id=&quot;Communication&quot; name=&quot;Communication&quot;>Comunicação&lt;/a>&#xD;
&lt;/h2>&#xD;
&lt;p>XP enfatiza a comunicação face a face em detrimento de outros tipos de comunicação, tais como documentos. XP valoriza os documentos, mas valoriza muito mais a comunicação pessoal. Para facilitar a comunicação, as equipes XP:&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>Usam um vocabulário ou metáfora comum do sistema.&lt;/li>&#xD;
    &lt;li>Trabalham bem perto uns dos outros em um espaço aberto.&lt;/li>&#xD;
    &lt;li>Integram o código continuamente.&lt;/li>&#xD;
    &lt;li>Trabalham em estreita colaboração com os profissionais do negócio, de preferência no mesmo ambiente físico.&lt;/li>&#xD;
    &lt;li>Programam em pares.&lt;/li>&#xD;
    &lt;li>Possuem o código coletivamente.&lt;/li>&#xD;
    &lt;li>Planejam e informam o status para o cliente, frequentemente.&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h2>&#xD;
    &lt;a id=&quot;Simplicity&quot; name=&quot;Simplicity&quot;>Simplicidade&lt;/a>&#xD;
&lt;/h2>&#xD;
&lt;p>XP pressupõe que é melhor fazer a coisa simples hoje e pagar um pouco mais amanhã se uma melhoria for realmente necessária do que fazer uma coisa complicada hoje, que nunca será usada. Esta é uma filosofia fundamental que permeia tudo em um projeto XP. Se algo não for necessário agora, nós não o faremos hoje.&lt;/p>&#xD;
&lt;p>Por exemplo:&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>Não escreveremos nenhum documento, até que exista uma necessidade imediata e significativa.&lt;/li>&#xD;
    &lt;li>Não adotaremos nenhuma ferramenta a menos que haja um benefício tangível e verificável.&lt;/li>&#xD;
    &lt;li>Evitaremos escrever a infraestrutura até que seja necessária ao código existente.&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>Para manter a simplicidade do software e da estrutura da equipe, as equipes XP:&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>Perguntam-se: Qual é a coisa mais simples que pode funcionar?&lt;/li>&#xD;
    &lt;li>Simplificam e melhoram o design continuamente através da refatoração.&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>Há algum tempo atrás, Kent Beck ofereceu as seguintes regras para um design simples. Em ordem prioritária, o código deve:&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>Passar em todos os testes.&lt;/li>&#xD;
    &lt;li>Não conter código duplicado.&lt;/li>&#xD;
    &lt;li>Expressar todas as ideias que o autor deseja expressar.&lt;/li>&#xD;
    &lt;li>Minimizar as classes e os métodos.&lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h2>&#xD;
    &lt;a id=&quot;Feedback&quot; name=&quot;Feedback&quot;>Feedback&lt;/a>&#xD;
&lt;/h2>&#xD;
&lt;p>O feedback funciona em diferentes escalas na XP.&lt;/p>&#xD;
&lt;p>No nível mais alto, o cliente pode ver o progresso da equipe através da entrega de software executável a cada duas semanas. Esse feedback contínuo permite que o cliente dirija o projeto ao sucesso. Obtemos feedback concreto sobre o estado do sistema, na forma de pedaços de funcionalidade executáveis que passam repetidamente pelos testes automatizados de aceitação. Estes testes impedem que o desenvolvimento do sistema recue. Nenhuma nova liberação do sistema pode falhar nos testes de aceitação usados.&lt;/p>&#xD;
&lt;p>No nível de programação, os programadores escrevem testes de unidade para toda a lógica do sistema a fim de obter feedback imediato e concreto que lhes informe se o código que acabaram de escrever está fazendo o que eles desejam.&lt;/p>&#xD;
&lt;p>Equipes XP:&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>Desenvolvem em pequenas liberações.&lt;/li>&#xD;
    &lt;li>Desenvolvem em menores iterações.&lt;/li>&#xD;
    &lt;li>Agrupam os requisitos e as funcionalidades em histórias que se encaixam em uma iteração.&lt;/li>&#xD;
    &lt;li>Decompõem as histórias em tarefas ainda menores.&lt;/li>&#xD;
    &lt;li>Escrevem pequenos testes de unidade para assegurar que o código gerado nas tarefas funciona adequadamente.&lt;/li>&#xD;
    &lt;li>Escrevem testes de aceitação para assegurar que as histórias funcionem corretamente.&lt;/li>&#xD;
    &lt;li>Acompanham o progresso e comunicam-no ao cliente com frequência.&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h2>&#xD;
    &lt;a id=&quot;Courage&quot; name=&quot;Courage&quot;>Coragem&lt;/a>&#xD;
&lt;/h2>&#xD;
&lt;p>Talvez um melhor nome para este valor seja confiança. Para funcionar, os membros de uma equipe XP têm que ter a coragem de confiar uns nos outros, nos seus clientes, nas suas práticas e em si próprios.&lt;/p>&#xD;
&lt;p>Os membros da equipe XP sabem que podem:&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>Parar quando estão cansados.&lt;/li>&#xD;
    &lt;li>Deixar que todas as decisões de negócio sejam feitas pelo cliente.&lt;/li>&#xD;
    &lt;li>Solicitar aos clientes a redução do escopo de uma liberação.&lt;/li>&#xD;
    &lt;li>Solicitar ajuda aos seus pares ou clientes.&lt;/li>&#xD;
    &lt;li>Projetar e implementar apenas o que seja necessário para hoje e deixar para amanhã o que será necessário amanhã.&lt;/li>&#xD;
    &lt;li>Fazer as alterações que melhorem a funcionalidade ou estrutura do código.&lt;/li>&#xD;
    &lt;li>Concertar o design e atualizar o código existente quando o design se demonstrar inadequado.&lt;/li>&#xD;
    &lt;li>Jogar código fora.&lt;/li>&#xD;
    &lt;li>Alterar o código que não escreveram.&lt;/li>&#xD;
    &lt;li>Alterar o processo quando não estiver funcionando.&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
